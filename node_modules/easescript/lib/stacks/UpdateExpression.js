const Utils = require("../core/Utils");
const Expression = require("./Expression");
class UpdateExpression extends Expression {
    constructor(compilation,node,scope,parentNode,parentStack){ 
        super(compilation,node,scope,parentNode,parentStack);
        this.isUpdateExpression= true;
        this.argument = Utils.createStack( compilation, node.argument, scope, node,this );
    }
    freeze(){
        super.freeze();
        this.argument.freeze();
    }
    definition(){
        return null;
    }
    description(){
        return this;
    }
    
    parser(){
        this.argument.parser();
        this.argument.setRefBeUsed();
    }

    checker(){
        const type = this.argument.type();
        const numberType = this.getGlobalTypeById("Number");
        if( type && !type.isAnyType && !numberType.is( type ) ){
           this.error(1087, this.argument.raw() );
        }
        return this.argument.checker();
    }
    type(){
        const numberType = this.getGlobalTypeById("Number");
        const type = this.argument.type();
        if( type.isAnyType || !numberType.is( type ) ){
            return this.getGlobalTypeById("int");
        }
        return this.argument.type();
    }
}

module.exports = UpdateExpression;