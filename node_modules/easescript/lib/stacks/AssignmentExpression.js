const Utils = require("../core/Utils");
const Expression = require("./Expression");
class AssignmentExpression extends Expression{
    constructor(compilation,node,scope,parentNode,parentStack){
        super(compilation,node,scope,parentNode,parentStack);
        this.isAssignmentExpression=true;
        this.left = Utils.createStack( compilation, node.left, scope, node ,this);
        this.right = Utils.createStack( compilation, node.right, scope, node ,this);
        this.left.accessor = "set";
    }
    freeze(){
        super.freeze();
        this.left.freeze();
        this.right.freeze();
    }
    definition(){
        return this.left.definition();
    }
    description(){
        const desc = this.left.description();
        if( desc && desc.isPropertyDefinition ){
            return desc.description();
        }
        return desc;
    }
    type(){
        const desc = this.right.description();
        return desc.type();
    }
    parser(){
        this.left.parser();
        this.right.parser();
        let desc = this.description();
        if( desc && !desc.isAnyType ){
            if( desc.kind ==="const" || !desc.assignment ){
                this.error(1015,this.left.value());
            }else{
                desc.assignment(this.right, this);
            }
        }
    }
    checker(){
        this.left.checker();
        this.right.checker();
    }
    value(){
        return this.left.value();
    }
    raw(){
        return this.left.raw();
    }
}

module.exports = AssignmentExpression;