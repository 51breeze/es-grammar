const Stack = require("../core/Stack");
const Utils = require("../core/Utils");
class SwitchCase  extends Stack {
   constructor(compilation,node,scope,parentNode,parentStack){ 
      super(compilation,node,scope,parentNode,parentStack);
      this.isSwitchCase=true;
      this.condition = Utils.createStack( compilation, node.test, scope, node,this );
      this.consequent = node.consequent.map( item=>Utils.createStack( compilation, item, scope, node,this ) );
   }
   freeze(){
      super.freeze();
      super.freeze( this.consequent );
      this.condition.freeze();
      this.consequent.forEach( stack=>stack.freeze() );
   }
   definition(){
      return null;
   }
   parser(){
      this.condition.parser();
      this.condition.setRefBeUsed();
      this.consequent.forEach( item=>item.parser() );
   }
   checker(){
      this.condition.checker();
      this.consequent.forEach( item=>item.checker() );
   }
}

module.exports = SwitchCase;