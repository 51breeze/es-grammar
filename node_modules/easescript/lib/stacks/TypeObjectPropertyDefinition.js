const Stack = require("../core/Stack");
const Utils = require("../core/Utils");
class TypeObjectPropertyDefinition extends Stack{
    constructor(compilation,node,scope,parentNode,parentStack){
        super(compilation,node,scope,parentNode,parentStack);
        this.isTypeObjectPropertyDefinition= true;
        this.key = Utils.createStack( compilation, node.key,scope, node,this );
        this.init = Utils.createStack( compilation, node.value,scope, node,this );
        this.question = !!node.key.question;
    }
    freeze(){
        super.freeze();
        this.key.freeze();
        this.init.freeze();
    }
    definition(){
        const question = this.question ? '?' : '';
        return {
            kind:"type",
            comments:this.parentStack.comments,
            identifier:this.key.value(),
            expre:`(property) ${this.key.value()}${question}:${this.type().toString()}`,
            location:this.key.getLocation(),
            file:this.compilation.file,
            context:this
        };
    }
    value(){
        return this.key.value();
    }
    description(){
        return this;
    }
    type(){
        return this.init.type();
    }
    parser(){
        this.init.parser();
    }
    checker(){
        this.init.checker();
    }
    error(code,...args){
        this.key.error(code,...args);
    }
    warn(code,...args){
        this.key.warn(code,...args);
    }
}

module.exports = TypeObjectPropertyDefinition;