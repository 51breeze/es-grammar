const Stack = require("../core/Stack");
const Utils = require("../core/Utils");
class ForStatement extends Stack{
    constructor(compilation,node,scope,parentNode,parentStack){
        super(compilation,node,scope,parentNode,parentStack);
        this.isForStatement= true;
        this.init  = Utils.createStack(compilation,node.init,scope,node,this);
        this.condition = Utils.createStack(compilation,node.test,scope,node,this);
        this.update  = Utils.createStack(compilation,node.update,scope,node,this);
        this.body  = Utils.createStack(compilation,node.body,scope,node,this);
    }
    freeze(){
        super.freeze();
        this.init && this.init.freeze();
        this.condition && this.condition.freeze();
        this.update && this.update.freeze();
        this.body.freeze();
    }
    definition(){
        return null;
    }
    parser(){
        if( this.init ){
            this.init.parser();
            this.init.setRefBeUsed();
        }
        if( this.condition ){
            this.condition.parser();
            this.condition.setRefBeUsed();
        }
        if( this.update  ){
            this.update.parser();
            this.update.setRefBeUsed();
        }
        this.body && this.body.parser();
    }
    checker(){
        this.init && this.init.checker();
        this.condition && this.condition.checker();
        this.update && this.update.checker();
        this.body && this.body.checker();
    }
}

module.exports = ForStatement;