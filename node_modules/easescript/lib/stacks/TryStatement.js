const Stack = require("../core/Stack");
const Utils = require("../core/Utils");
const Declarator = require("./Declarator");
class TryStatement extends Stack {

    constructor(compilation,node,scope,parentNode,parentStack)
    { 
        super(compilation,node,scope,parentNode,parentStack);
        this.isTryStatement= true;
        this.param = new Declarator(compilation,node.handler.param,scope,node,this);
        this.handler = Utils.createStack( compilation,node.handler.body, scope, node,this );
        this.block = Utils.createStack( compilation,node.block, scope, node,this );
        scope.define(this.param.value(), this.param);
    }
    freeze(){
        super.freeze();
        this.param.freeze();
        this.handler.freeze();
        this.block.freeze();
    }
    definition(){
        return null;
    }
    parser(){
        this.param.parser();
        this.handler.parser();
        this.block.parser();
    }
    checker(){
        this.param.checker();
        this.handler.checker();
        this.block.checker();
    }
}

module.exports = TryStatement;