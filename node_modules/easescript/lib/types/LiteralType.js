const Type = require("./Type");
class LiteralType extends Type{
    constructor(inherit,target){
        super("$LiteralType",inherit)
        this.isLiteralType = true;
        this.target = target;
    }
    is( type){
        if( !type || !(type instanceof Type) )return false;
        if( type.isGenericValueType ){
            type = type.value;
            if( !type ){
                return true;
            }
        }
        if( this === type || type.isNullableType || type.isAnyType )return true;
        if( this.target.isTypeDefinition ){
            return this.inherit===type.inherit && this.target.value() === type.target.value();
        }
        return this.inherit && this.inherit.is( type );
    }
    toString(){
        if( this.target.isDeclaratorTypeAlias){
            return this.target.value();
        }else if(this.target.isTypeDefinition){
            return this.target.raw();
        }
        return this.inherit && this.inherit.toString();
    }
}
module.exports = LiteralType;